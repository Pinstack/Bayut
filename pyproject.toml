[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bayut-scraper"
version = "1.0.0"
description = "A comprehensive, efficient, and async Python scraper for Bayut.sa property listings"
authors = [{name = "Bayut Scraper Team"}]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "aiohttp>=3.8.0",
    "asyncio",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "vulture>=2.9.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B011",  # do not call assert False since python -O removes these calls
    "UP035", # typing.Dict/List deprecated (just warnings)
    "UP006", # Use dict/list instead of Dict/List (just warnings)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.ruff.lint.isort]
known-first-party = ["src"]

# Ruff formatter settings (similar to Black)
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.vulture]
exclude = [
    ".venv",
    ".git",
    "__pycache__",
    "build",
    "dist",
    "alembic",
    "migrations",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 